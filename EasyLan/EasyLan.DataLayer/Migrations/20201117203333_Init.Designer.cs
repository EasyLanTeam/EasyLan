// <auto-generated />
using System;
using EasyLan.DataLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EasyLan.DataLayer.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20201117203333_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("EasyLan.DataLayer.Entites.Location", b =>
                {
                    b.Property<Guid>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("City")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("HouseNumber")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Street")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("LocationId");

                    b.ToTable("locations");
                });

            modelBuilder.Entity("EasyLan.DataLayer.Entites.Tournament", b =>
                {
                    b.Property<Guid>("TournamentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Comment")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("DateTimeOfStart")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Format")
                        .HasColumnType("int");

                    b.Property<int>("Game")
                        .HasColumnType("int");

                    b.Property<string>("Initiator")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("IsWithAlcohol")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsWithFood")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid?>("LocationId")
                        .HasColumnType("char(36)");

                    b.Property<int>("NumberOfTeamsEnd")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfTeamsStart")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfWinner")
                        .HasColumnType("int");

                    b.Property<int>("Payment")
                        .HasColumnType("int");

                    b.Property<int>("PryzeCount")
                        .HasColumnType("int");

                    b.Property<string>("PryzeType")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("TournamentType")
                        .HasColumnType("int");

                    b.HasKey("TournamentId");

                    b.HasIndex("LocationId");

                    b.ToTable("tournaments");
                });

            modelBuilder.Entity("EasyLan.DataLayer.Entites.User", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<string>("Fullname")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Password")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Username")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("EasyLan.DataLayer.Entites.Tournament", b =>
                {
                    b.HasOne("EasyLan.DataLayer.Entites.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId");
                });
#pragma warning restore 612, 618
        }
    }
}
